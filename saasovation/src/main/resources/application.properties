
# Common application properties by Spring Boot team can be found here:
# https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html

# This will remove Spring logo from the console:
spring.main.banner-mode=off

# This will remove default Spring Web favicon:
spring.mvc.favicon.enabled=false

# To change the server HTTP port (http://localhost:8080/) use this line
#server.port=8080

# This will enable hot swapping for thymeleaf templates so you don't need to restart the server every time the template is changed.
# Use this option only for development, DON'T USE THIS ON A PRODUCTION SYSTEM !!!!!
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=${project.base-dir}/src/main/resources/templates/
spring.resources.static-locations=${project.base-dir}/src/main/resources/static/
project.base-dir=file:///C:/Users/Maria/Desktop/Thesis Prep/source-code/saasovation


# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://localhost:3306/saasovation
#spring.datasource.url=jdbc:mysql://localhost:3306/vacationplanner?useSSL=false
# here we use at the end ?useSSL=false only because of a warning (Java 11 and MySQL 5.7 issue), REMOVE IT IN PRODUCTION!
spring.datasource.username=root
spring.datasource.password=mariadb
logging.level.org.springframework.security=DEBUG
spring.jpa.properties.hibernate.search.default.directory_provider = filesystem
spring.jpa.properties.hibernate.search.default.indexBase = /var/lucene/indexes

## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop
# none - This is the default for MySQL, no change to the database structure.
# update - Hibernate changes the database according to the given Entity structures.
# create - Creates the database every time, but don#t drop it when close.
# create-drop - Creates the database then drops it when the SessionFactory closes.
# We here begin with create because we don't have the database structure yet.
# After the first run, we could switch it to update or none according to program requirements.
# Use update when you want to make some change to the database structure.
# The default for H2 and other embedded databases is create-drop, but for others like MySQL is none.

## Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect



